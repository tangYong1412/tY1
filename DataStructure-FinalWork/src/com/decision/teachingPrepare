每学年含两学期，每学期的时间长度和学分上限值均相等。

每个专业开设的课程都是确定的，而且课程在开设时间的安排必须满足先修关系。

每门课程有哪些先修课程是确定的，可以有任意多门，也可以没有。每门课恰好占一个学期。

输入参数：学期总数，一学期的学分上限，
        每门课的课程号（固定占3位的字母数字串）
        学分和直接先修课的课程号。

允许用户指定下列两种编排策略之一：
    一是使学生在各学期中的学习负担尽量均匀；
    二是使课程尽可能地集中在前几个学期中。

若根据给定的条件问题无解，则报告适当的信息；
    否则将教学计划输出到用户指定的文件中。计划的表格格式自行设计。

算法分析（需求分析）：
    无环的有向图称为有向无环图（DAG）。
    采用一个有向图来表示课程和课程之间的相互制约的关系，其中以顶点表示课程，弧表示活动之间的优先制约关系。
    对于一个工程来说最关系的是两方面：能否正常进行；最多工期。对应到图中就是拓扑排序和求关键路径。
        采用有向图描述课程与课程之间的关系。
        利用拓扑排序判断该图是否有环，及判断该教学计划编制是否可行。

    1、图的建立（邻接表的存储方式）：
        图是边和顶点的集合，邻接表通过顶点数组，数组中的每个顶点是与其相连的弧链表的头结点

    有向图类：
        成员变量
            学期学分上限
            顶点数  -> 课程数
            边数 -> 课程直接先修关系数
            顶点数组 -> 课程数组

        方法：
            创建有向图
            添加边数

            拓扑排序（验证给定条件问题是否有解）
            求各点入度

    邻接表：
        顶点类：
            成员变量：
                课程编号
                学分
                第一条依附的边

        边类：
            成员变量
                该弧指向的顶点位置
                指向下一条弧

    编排策略选择问题：
        拓扑排序规则
            选择入度为零的顶点
            删除该顶点，并删除以他出发的弧
            重复以上步骤，直到没有顶点。或存在一个环

            删除顶点，表示该课程先修，删除从他出发的弧，产生新的入度为零的顶点表示与以其为先修课程的课程可修。
            重复以上过程，每次在数组中存储被删除的节点，得到上课顺序。

    第一学期只能选择入度为零的节点

            学习负担尽量均匀

            课程尽可能地集中在前几个学期中